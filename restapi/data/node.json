[
    {
        "id" : 1,
        "node_intro": "Node.js is an open-source, multi-platform server environment that may run on Windows, Linux, Unix, macOS, and other platforms. The V8 JavaScript engine is used by the backend JavaScript runtime environment, Node.js, to run JavaScript code outside the web browser. By using nodejs we can directly converting code to byte. There level of processing will be decrease.",
        "node_ex": "Express.js is a compact framework that enhances Node.j's web server functionality while also streamlining the API and introducing practical new features.This makes it easier to organize your application's functionality using middleware and routing. This adds useful utility to Node.j's HTTP objects, making it easier to render dynamic HTTP objects.",
        "node_cco": "CORS (Cross-Origin Resource Sharing) is a mechanism that checks whether browsers prevent frontend JavaScript code from accessing replies for cross-origin queries by passing HTTP headers. Cross-origin access to resources is prohibited under the same-origin security policy.",
        "node_do": "DotEnv is a little npm package that automatically imports environment variables from an env file into the process' env object. Before using it, install DotEnv first by using the command npm i dotenv. The package should then be required and configured in your app as follows: require('dotenv'). The Dotenv npm package may be used in any NodeJs application. The primary objective of the Dotenv package is to make it possible for developers to create an a. env file with customised environment files that are incorporated into the procedure.",
        "node_mon": "The MEAN stack (MongoDB, Express. js, AngularJS, and Node. js) and the MERN stack (MongoDB, Express. js, React. js) are two well-known tech stacks that use MongoDB and Node. Js. The MongoDB Node. js Driver streamlines communication between Node. js applications and MongoDB databases. You'll need the driver in order to establish a connection to your database and execute the queries shown in this Quick Start series.",
        "node_mor": "Morgan is another piece of middleware for Node. js that logs HTTP requests. It makes logging requests to your application simpler. Using Winston and Morgan in tandem. With the inclusion of new transports, Winston allows you much more freedom. It also makes it simple to query your logs for analysis.",
        "node_cha": "The third-party module in Node. js called Chalk is used to style the format of text and allows us to design our own themes for Node. js projects. Benefits of the Chalk Module: The colour of the command-line output may be changed, which is helpful.",
        "node_bod": "When you require more information than simply the URL being accessed, a body-parser is generally useful. specifically when making a POST, PATCH, or PUT HTTP request when the desired data is in the body. You may get access to req by using body-parser. The Node JS middleware Body Parser manages HTTP POST requests. Body Parser may convert the body of a client request that is based on strings into a JavaScript object that can be used in our application.",
        "node_nodemon": "When you require more information than simply the URL being accessed, a body-parser is generally useful. specifically when making a POST, PATCH, or PUT HTTP request when the desired data is in the body. You may get access to req by using body-parser. The Node JS middleware Body Parser manages HTTP POST requests. Body Parser may convert the body of a client request that is based on strings into a JavaScript object that can be used in our application. Request: what we send to server like params, querparams, body. Respond: what server send us back.",
        "mongo_intro": "The scalability, flexibility, and essential indexing and querying are all features of the document database MongoDB. MongoDB stores data in adaptable documents that resemble JSON, allowing fields to change from document to document and for gradual changes to the data structure. Since MongoDB is really a distributed database, it comes with built-in support for high availability, horizontal scaling, and global dispersion. Data manipulation is simple thanks to the document model, which corresponds to the objects in your application code. You may access and analyse your data using practical methods including ad hoc searches, indexing, and real-time aggregation. MongoDB offers built-in support for high availability, horizontal scaling, and global dispersion since it is fundamentally a distributed database.",
        "node_image": "https://i.ibb.co/yW5qGhm/node.png"
    }
]